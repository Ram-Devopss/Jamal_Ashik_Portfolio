{
  "version": 3,
  "sources": ["../../@astrojs/preact/dist/static-html.js", "../../@astrojs/preact/dist/client.js"],
  "sourcesContent": ["import { h } from \"preact\";\r\nconst StaticHtml = ({ value, name, hydrate = true }) => {\r\n  if (!value) return null;\r\n  const tagName = hydrate ? \"astro-slot\" : \"astro-static-slot\";\r\n  return h(tagName, { name, dangerouslySetInnerHTML: { __html: value } });\r\n};\r\nStaticHtml.shouldComponentUpdate = () => false;\r\nvar static_html_default = StaticHtml;\r\nexport {\r\n  static_html_default as default\r\n};\r\n", "import { h, hydrate, render } from \"preact\";\r\nimport StaticHtml from \"./static-html.js\";\r\nconst sharedSignalMap = /* @__PURE__ */ new Map();\r\nvar client_default = (element) => async (Component, props, { default: children, ...slotted }, { client }) => {\r\n  if (!element.hasAttribute(\"ssr\")) return;\r\n  for (const [key, value] of Object.entries(slotted)) {\r\n    props[key] = h(StaticHtml, { value, name: key });\r\n  }\r\n  let signalsRaw = element.dataset.preactSignals;\r\n  if (signalsRaw) {\r\n    const { signal } = await import(\"@preact/signals\");\r\n    let signals = JSON.parse(\r\n      element.dataset.preactSignals\r\n    );\r\n    for (const [propName, signalId] of Object.entries(signals)) {\r\n      if (Array.isArray(signalId)) {\r\n        signalId.forEach(([id, indexOrKeyInProps]) => {\r\n          const mapValue = props[propName][indexOrKeyInProps];\r\n          let valueOfSignal = mapValue;\r\n          if (typeof indexOrKeyInProps !== \"string\") {\r\n            valueOfSignal = mapValue[0];\r\n            indexOrKeyInProps = mapValue[1];\r\n          }\r\n          if (!sharedSignalMap.has(id)) {\r\n            const signalValue = signal(valueOfSignal);\r\n            sharedSignalMap.set(id, signalValue);\r\n          }\r\n          props[propName][indexOrKeyInProps] = sharedSignalMap.get(id);\r\n        });\r\n      } else {\r\n        if (!sharedSignalMap.has(signalId)) {\r\n          const signalValue = signal(props[propName]);\r\n          sharedSignalMap.set(signalId, signalValue);\r\n        }\r\n        props[propName] = sharedSignalMap.get(signalId);\r\n      }\r\n    }\r\n  }\r\n  const child = h(\r\n    Component,\r\n    props,\r\n    children != null ? h(StaticHtml, { value: children }) : children\r\n  );\r\n  if (client === \"only\") {\r\n    element.innerHTML = \"\";\r\n    render(child, element);\r\n  } else {\r\n    hydrate(child, element);\r\n  }\r\n  element.addEventListener(\"astro:unmount\", () => render(null, element), { once: true });\r\n};\r\nexport {\r\n  client_default as default\r\n};\r\n"],
  "mappings": ";;;;;;;AACA,IAAM,aAAa,CAAC,EAAE,OAAO,MAAM,UAAU,KAAK,MAAM;AACtD,MAAI,CAAC,MAAO,QAAO;AACnB,QAAM,UAAU,UAAU,eAAe;AACzC,SAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,EAAE,QAAQ,MAAM,EAAE,CAAC;AACxE;AACA,WAAW,wBAAwB,MAAM;AACzC,IAAI,sBAAsB;;;ACL1B,IAAM,kBAAkC,oBAAI,IAAI;AAChD,IAAI,iBAAiB,CAAC,YAAY,OAAO,WAAW,OAAO,EAAE,SAAS,UAAU,GAAG,QAAQ,GAAG,EAAE,OAAO,MAAM;AAC3G,MAAI,CAAC,QAAQ,aAAa,KAAK,EAAG;AAClC,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAM,GAAG,IAAI,EAAE,qBAAY,EAAE,OAAO,MAAM,IAAI,CAAC;AAAA,EACjD;AACA,MAAI,aAAa,QAAQ,QAAQ;AACjC,MAAI,YAAY;AACd,UAAM,EAAE,OAAO,IAAI,MAAM,OAAO,8BAAiB;AACjD,QAAI,UAAU,KAAK;AAAA,MACjB,QAAQ,QAAQ;AAAA,IAClB;AACA,eAAW,CAAC,UAAU,QAAQ,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC1D,UAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,iBAAS,QAAQ,CAAC,CAAC,IAAI,iBAAiB,MAAM;AAC5C,gBAAM,WAAW,MAAM,QAAQ,EAAE,iBAAiB;AAClD,cAAI,gBAAgB;AACpB,cAAI,OAAO,sBAAsB,UAAU;AACzC,4BAAgB,SAAS,CAAC;AAC1B,gCAAoB,SAAS,CAAC;AAAA,UAChC;AACA,cAAI,CAAC,gBAAgB,IAAI,EAAE,GAAG;AAC5B,kBAAM,cAAc,OAAO,aAAa;AACxC,4BAAgB,IAAI,IAAI,WAAW;AAAA,UACrC;AACA,gBAAM,QAAQ,EAAE,iBAAiB,IAAI,gBAAgB,IAAI,EAAE;AAAA,QAC7D,CAAC;AAAA,MACH,OAAO;AACL,YAAI,CAAC,gBAAgB,IAAI,QAAQ,GAAG;AAClC,gBAAM,cAAc,OAAO,MAAM,QAAQ,CAAC;AAC1C,0BAAgB,IAAI,UAAU,WAAW;AAAA,QAC3C;AACA,cAAM,QAAQ,IAAI,gBAAgB,IAAI,QAAQ;AAAA,MAChD;AAAA,IACF;AAAA,EACF;AACA,QAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA,YAAY,OAAO,EAAE,qBAAY,EAAE,OAAO,SAAS,CAAC,IAAI;AAAA,EAC1D;AACA,MAAI,WAAW,QAAQ;AACrB,YAAQ,YAAY;AACpB,MAAO,OAAO,OAAO;AAAA,EACvB,OAAO;AACL,MAAQ,OAAO,OAAO;AAAA,EACxB;AACA,UAAQ,iBAAiB,iBAAiB,MAAM,EAAO,MAAM,OAAO,GAAG,EAAE,MAAM,KAAK,CAAC;AACvF;",
  "names": []
}
